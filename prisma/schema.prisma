generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model postImages {
  id         Int       @id @default(autoincrement())
  created_at DateTime? @default(now()) @db.Timestamp(6)
  url        String?   @db.VarChar(255)
  postId     Int
  post       posts     @relation(fields: [postId], references: [id])
}

model otpCodes {
  id     Int      @id @unique @default(autoincrement())
  code   String   @db.VarChar(6)
  expiry DateTime @db.Timestamp(6)
  userId Int
  user   users    @relation(fields: [userId], references: [id])
}

model comments {
  id        Int      @id @unique @default(autoincrement())
  content   String   @db.VarChar(255)
  createdAt DateTime @default(now())
  postId    Int
  post      posts    @relation(fields: [postId], references: [id])
  userId    Int
  user      users    @relation(fields: [userId], references: [id])
}

model posts {
  id        Int          @id @unique @default(autoincrement())
  title     String       @db.VarChar(255)
  content   String       @db.VarChar(255)
  image     String?      @db.VarChar(255)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  authorId  Int
  author    users        @relation(fields: [authorId], references: [id])
  comments  comments[]
  images    postImages[]
}

model users {
  id           Int        @id @unique @default(autoincrement())
  name         String     @db.VarChar(255)
  email        String     @unique @db.VarChar(255)
  password     String     @db.VarChar(255)
  profileImage String?    @db.VarChar(255)
  role_Id      Int
  roles        roles      @relation(fields: [role_Id], references: [id])
  posts        posts[]
  comments     comments[]
  otpCodes     otpCodes[]
  attempt      Int?
}

model roles {
  id          Int     @id @unique @default(autoincrement())
  name        String  @db.VarChar(255)
  description String  @db.VarChar(255)
  users       users[]
}
